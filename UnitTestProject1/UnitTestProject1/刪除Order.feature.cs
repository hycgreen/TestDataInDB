// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace UnitTestProject1
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("刪除訂單")]
    public partial class 刪除訂單Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "刪除Order.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "刪除訂單", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 12
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "OrderID",
                        "CustomerID",
                        "EmployeeID",
                        "OrderDate",
                        "RequiredDate",
                        "ShippedDate",
                        "ShipVia",
                        "Freight",
                        "ShipName",
                        "ShipAddress",
                        "ShipCity",
                        "ShipRegion",
                        "ShipPostalCode",
                        "ShipCountry"});
            table1.AddRow(new string[] {
                        "10248",
                        "VINET",
                        "5",
                        "1996-07-04 00:00:00.000",
                        "1996-08-01 00:00:00.000",
                        "1996-07-16 00:00:00.000",
                        "3",
                        "32.38",
                        "Vins et alcools Chevalier",
                        "59 rue de l\'Abbaye",
                        "Reims",
                        "NULL",
                        "51100",
                        "France"});
#line 13
 testRunner.Given("資料庫Orders資料", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "OrderID",
                        "ProductID",
                        "UnitPrice",
                        "Quantity",
                        "Discount"});
            table2.AddRow(new string[] {
                        "10248",
                        "11",
                        "14.00",
                        "12",
                        "0"});
            table2.AddRow(new string[] {
                        "10248",
                        "72",
                        "34.80",
                        "5",
                        "0"});
            table2.AddRow(new string[] {
                        "10248",
                        "42",
                        "9.80",
                        "10",
                        "0"});
#line 16
 testRunner.And("資料庫Order Details資料", ((string)(null)), table2, "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("我在訂單作業刪除訂單資料")]
        public virtual void 我在訂單作業刪除訂單資料()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("我在訂單作業刪除訂單資料", ((string[])(null)));
#line 22
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 23
 testRunner.Given("刪除條件OrdersID 10248", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
 testRunner.When("我調用Delete", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
 testRunner.Then("我會得到True", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
